1、
巴特沃斯低通滤波器
I=imread('E:\课程\数字图像处理\作业\第五次作业\test1.pgm');
figure(1);
imshow(I);
title('test1.pgm原始图像');
imwrite(I,'test1原始图像.bmp');
f=double(I);
F=fft2(f);        
F=fftshift(F);    
[P,Q]=size(F);
n_butterworth=2;      
D0=75;  
for u=1:P
    for v=1:Q
        D(u,v)=sqrt((u-fix(P/2))^2+(v-fix(Q/2))^2);
        H(u,v)=1/(1+(D(u,v)/D0)^(2*n_butterworth)); 
        G(u,v)=H(u,v)*F(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
figure(2);
imshow(g);
title('test1.pgm经butterworth低通滤波后'); 
imwrite(g,'test1布特沃斯低通滤波后（D0=75）.bmp');      
S=0;
S1=0;
for u=1:P
    for v=1:Q
        L1=(abs(G(u,v)))^2;  
        S1=S1+L1;
        L=(abs(F(u,v)))^2;  
        S=S+L;
    end
end
L=S1/S
高斯滤波器
I=imread('E:\课程\数字图像处理\作业\第五次作业\test1.pgm');
figure(1);
imshow(I);
title('test1.pgm原始图像');
imwrite(I,'test1原始图像.bmp');
f=double(I);
F=fft2(f);
F=fftshift(F);
[P,Q]=size(F);
D0=75;
for u=1:P
    for v=1:Q
        D(u,v)=sqrt((u-fix(P/2))^2+(v-fix(Q/2))^2);
        H(u,v)=exp(-D(u,v)^2/(2*D0^2));
        G(u,v)=F(u,v)*H(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
figure(2);
imshow(g);
title('Gaussian低通滤波后的test1.pgm');
imwrite(g,'test1高斯低通滤波后（D0=75）.bmp'); 
S=0;
S1=0;
for i=1:P
    for j=1:Q
        L=(abs(F(i,j)))^2;                     %计算结果图像的功率谱
        S=S+L;
        L1=(abs(G(i,j)))^2;                        %计算源图像的功率谱
        S1=S1+L1;
    end
end
L=S1/S                                          %计算功率谱比
2、
巴特沃斯高通滤波器
I=imread('E:\课程\数字图像处理\作业\第五次作业\test3_corrupt.pgm');
figure(1);
imshow(I);
title('test3_corrupt.pgm原始图像');
imwrite(I,'test3_corrupt原始图像.bmp');
f=double(I);
F=fft2(f);        
F=fftshift(F);    
[P,Q]=size(F);
n_butterworth=2;      
D0=75;  
for u=1:P
    for v=1:Q
        D(u,v)=sqrt((u-fix(P/2))^2+(v-fix(Q/2))^2);
        H(u,v)=1/(1+(D0/D(u,v))^(2*n_butterworth)); 
        G(u,v)=H(u,v)*F(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
figure(2);
imshow(g);
title('test3_corrupt.pgm经butterworth高通滤波后'); 
imwrite(g,'test3布特沃斯高通滤波后（D0=75）.bmp');      
S=0;
S1=0;
for u=1:P
    for v=1:Q
        L1=(abs(G(u,v)))^2;  
        S1=S1+L1;
        L=(abs(F(u,v)))^2;  
        S=S+L;
    end
end
L=S1/S
高斯高通滤波器
I=imread('E:\课程\数字图像处理\作业\第五次作业\test4 copy.bmp');
figure(1);
imshow(I);
title('test4 copy.bmp原始图像');
imwrite(I,'test4原始图像.bmp');
f=double(I);
F=fft2(f);
F=fftshift(F);
[P,Q]=size(F);
D0=75;
for u=1:P
    for v=1:Q
        D(u,v)=sqrt((u-fix(P/2))^2+(v-fix(Q/2))^2);
        H(u,v)=1-exp(-D(u,v)^2/(2*D0^2));
        G(u,v)=F(u,v)*H(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
figure(2);
imshow(g);
title('Gaussian高通滤波后的test4 copy.bmp');
imwrite(g,'test4高斯高通滤波后.bmp'); 
S=0;
S1=0;
for i=1:P
    for j=1:Q
        L=(abs(F(i,j)))^2;                     %计算结果图像的功率谱
        S=S+L;
        L1=(abs(G(i,j)))^2;                        %计算源图像的功率谱
        S1=S1+L1;
    end
end
L=S1/S        
3、
拉普拉斯
I=imread('E:\课程\数字图像处理\作业\第五次作业\test3_corrupt.pgm');
figure(1);
imshow(I);
title('test3_corrupt.pgm原始图像');
imwrite(I,'test3_corrupt原始图像.bmp');
f=double(I);
F=fft2(f);        
F=fftshift(F);    
[P,Q]=size(F);
c=1;
for u=1:P
    for v=1:Q
        D(u,v)=sqrt((u-fix(P/2))^2+(v-fix(Q/2))^2);
        H(u,v)=1+c*4*pi^2*D(u,v)^2; 
        G(u,v)=H(u,v)*F(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
figure(2);
imshow(g);
title('test3_corrupt.pgm经拉普拉斯滤波后'); 
imwrite(g,'test3经拉普拉斯滤波后.bmp');    
Unmask
I=imread('E:\课程\数字图像处理\作业\第五次作业\test4 copy.bmp');
figure(1);
imshow(I);
title('test4 copy.bmp原始图像');
imwrite(I,'test4 copy原始图像.bmp');
f=double(I);
F=fft2(f);        
F=fftshift(F);    
[P,Q]=size(F);
k1=1;k2=1;D0=100;
%unmask中使用高斯高通滤波器
for u=1:P
    for v=1:Q
        D(u,v)=sqrt((u-fix(P/2))^2+(v-fix(Q/2))^2);
        H(u,v)=1-exp(-D(u,v)^2/(2*D0^2)); 
        G(u,v)=(k1+k2*H(u,v))*F(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
figure(2)
imshow(g);
title('test4经unmask滤波后'); 
imwrite(g,'test4 copy经unmask滤波后.bmp');  

